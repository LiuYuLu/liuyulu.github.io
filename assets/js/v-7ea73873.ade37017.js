"use strict";(self.webpackChunkistr_wiki_vuepress=self.webpackChunkistr_wiki_vuepress||[]).push([[218],{5848:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7ea73873",path:"/python/00module.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"sys 模块",slug:"sys-模块",children:[]},{level:2,title:"time模块",slug:"time模块",children:[]}],filePathRelative:"python/00module.md",git:{updatedTime:1621409922e3,contributors:[{name:"刘玉路",email:"lyl07583@ly.com",commits:1}]}}},6045:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});const e=(0,a(6252).uE)('<p>OS 模块</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#os模块就是对操作系统进行操作，使用该模块必须先导入模块：\nimport os\n\n#getcwd() 获取当前工作目录(当前工作目录默认都是当前文件所在的文件夹)\nresult = os.getcwd()\nprint(result)\n\n#chdir()改变当前工作目录\nos.chdir(&#39;/home/sy&#39;)\nresult = os.getcwd()\nprint(result)\n\nopen(&#39;02.txt&#39;,&#39;w&#39;)\n\n#操作时如果书写完整的路径则不需要考虑默认工作目录的问题,按照实际书写路径操作\nopen(&#39;/home/sy/下载/02.txt&#39;,&#39;w&#39;)\n\n#listdir() 获取指定文件夹中所有内容的名称列表\nresult = os.listdir(&#39;/home/sy&#39;)\nprint(result)\n\n#mkdir()  创建文件夹\n#os.mkdir(&#39;girls&#39;)\n#os.mkdir(&#39;boys&#39;,0o777)\n\n#makedirs()  递归创建文件夹\n#os.makedirs(&#39;/home/sy/a/b/c/d&#39;)\n\n#rmdir() 删除空目录\n#os.rmdir(&#39;girls&#39;)\n\n#removedirs 递归删除文件夹  必须都是空目录\n#os.removedirs(&#39;/home/sy/a/b/c/d&#39;)\n\n#rename() 文件或文件夹重命名\n#os.rename(&#39;/home/sy/a&#39;,&#39;/home/sy/alibaba&#39;\n#os.rename(&#39;02.txt&#39;,&#39;002.txt&#39;)\n\n#stat() 获取文件或者文件夹的信息\n#result = os.stat(&#39;/home/sy/PycharmProject/Python3/10.27/01.py)\n#print(result)\n\n#system() 执行系统命令(危险函数)\n#result = os.system(&#39;ls -al&#39;)  #获取隐藏文件\n#print(result)\n\n#环境变量\n&#39;&#39;&#39;\n环境变量就是一些命令的集合\n操作系统的环境变量就是操作系统在执行系统命令时搜索命令的目录的集合\n&#39;&#39;&#39;\n#getenv() 获取系统的环境变量\nresult = os.getenv(&#39;PATH&#39;)\nprint(result.split(&#39;:&#39;))\n\n#putenv() 将一个目录添加到环境变量中(临时增加仅对当前脚本有效)\n#os.putenv(&#39;PATH&#39;,&#39;/home/sy/下载&#39;)\n#os.system(&#39;syls&#39;)\n\n#exit() 退出终端的命令\n\n#os模块中的常用值\n#curdir  表示当前文件夹   .表示当前文件夹  一般情况下可以省略\nprint(os.curdir)\n\n#pardir  表示上一层文件夹   ..表示上一层文件夹  不可省略!\nprint(os.pardir)\n\n#os.mkdir(&#39;../../../man&#39;)#相对路径  从当前目录开始查找\n#os.mkdir(&#39;/home/sy/man1&#39;)#绝对路径  从根目录开始查找\n\n#name 获取代表操作系统的名称字符串\nprint(os.name) #posix -&gt; linux或者unix系统  nt -&gt; window系统\n\n#sep 获取系统路径间隔符号  window -&gt;\\    linux -&gt;/\nprint(os.sep)\n\n#extsep 获取文件名称和后缀之间的间隔符号  window &amp; linux -&gt; .\nprint(os.extsep)\n\n#linesep  获取操作系统的换行符号  window -&gt; \\r\\n  linux/unix -&gt; \\n\nprint(repr(os.linesep))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><p>os.path</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#导入os模块\nimport os\n\n#以下内容都是os.path子模块中的内容\n\n#abspath()  将相对路径转化为绝对路径\npath = &#39;./boys&#39;#相对\nresult = os.path.abspath(path)\nprint(result)\n\n#dirname()  获取完整路径当中的目录部分  &amp;  basename()获取完整路径当中的主体部分\npath = &#39;/home/sy/boys&#39;\nresult = os.path.dirname(path)\nprint(result)\n\nresult = os.path.basename(path)\nprint(result)\n\n#split() 将一个完整的路径切割成目录部分和主体部分\npath = &#39;/home/sy/boys&#39;\nresult = os.path.split(path)\nprint(result)\n\n#join() 将2个路径合并成一个\nvar1 = &#39;/home/sy&#39;\nvar2 = &#39;000.py&#39;\nresult = os.path.join(var1,var2)\nprint(result)\n\n#splitext() 将一个路径切割成文件后缀和其他两个部分,主要用于获取文件的后缀\npath = &#39;/home/sy/000.py&#39;\nresult = os.path.splitext(path)\nprint(result)\n\n#getsize()  获取文件的大小\n#path = &#39;/home/sy/000.py&#39;\n#result = os.path.getsize(path)\n#print(result)\n\n#isfile() 检测是否是文件\npath = &#39;/home/sy/000.py&#39;\nresult = os.path.isfile(path)\nprint(result)\n\n#isdir()  检测是否是文件夹\nresult = os.path.isdir(path)\nprint(result)\n\n#islink() 检测是否是链接\npath = &#39;/initrd.img.old&#39;\nresult = os.path.islink(path)\nprint(result)\n\n#getctime() 获取文件的创建时间 get create time\n#getmtime() 获取文件的修改时间 get modify time\n#getatime() 获取文件的访问时间 get active time\n\nimport time\n\nfilepath = &#39;/home/sy/下载/chls&#39;\n\nresult = os.path.getctime(filepath)\nprint(time.ctime(result))\n\nresult = os.path.getmtime(filepath)\nprint(time.ctime(result))\n\nresult = os.path.getatime(filepath)\nprint(time.ctime(result))\n\n#exists() 检测某个路径是否真实存在\nfilepath = &#39;/home/sy/下载/chls&#39;\nresult = os.path.exists(filepath)\nprint(result)\n\n#isabs() 检测一个路径是否是绝对路径\npath = &#39;/boys&#39;\nresult = os.path.isabs(path)\nprint(result)\n\n#samefile() 检测2个路径是否是同一个文件\npath1 = &#39;/home/sy/下载/001&#39;\npath2 = &#39;../../../下载/001&#39;\nresult = os.path.samefile(path1,path2)\nprint(result)\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><p>os.environ</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#os.environ 用于获取和设置系统环境变量的内置值\nimport os\n#获取系统环境变量  getenv() 效果\nprint(os.environ[&#39;PATH&#39;])\n\n#设置系统环境变量 putenv()\nos.environ[&#39;PATH&#39;] += &#39;:/home/sy/下载&#39;\nos.system(&#39;chls&#39;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="sys-模块" tabindex="-1"><a class="header-anchor" href="#sys-模块" aria-hidden="true">#</a> sys 模块</h2><ul><li>sys.argv 命令行参数List，第一个元素是程序本身路径</li><li>sys.modules.keys() 返回所有已经导入的模块列表</li><li>sys.exc_info() 获取当前正在处理的异常类,exc_type、exc_value、exc_traceback当前处理的异常详细信息</li><li>sys.exit(n) 退出程序，正常退出时exit(0)</li><li>sys.hexversion 获取Python解释程序的版本值，16进制格式如：0x020403F0</li><li>sys.version 获取Python解释程序的版本信息</li><li>sys.maxint 最大的Int值</li><li>sys.maxunicode 最大的Unicode值</li><li>sys.modules 返回系统导入的模块字段，key是模块名，value是模块</li><li>sys.path 返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</li><li>sys.platform 返回操作系统平台名称</li><li>sys.stdout 标准输出</li><li>sys.stdin 标准输入</li><li>sys.stderr 错误输出</li><li>sys.exc_clear() 用来清除当前线程所出现的当前的或最近的错误信息</li><li>sys.exec_prefix 返回平台独立的python文件安装的位置</li><li>sys.byteorder 本地字节规则的指示器，big-endian平台的值是&#39;big&#39;,little-endian平台的值是&#39;little&#39;</li><li>sys.copyright 记录python版权相关的东西</li><li>sys.api_version 解释器的C的API版本</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sys.stdin,sys.stdout,sys.stderr\n\nstdin , stdout , 以及stderr 变量包含与标准I/O 流对应的流对象. 如果需要更好地控制输出,而print 不能满足你的要求, 它们就是你所需要的. 你也可以替换它们, 这时候你就可以重定向输出和输入到其它设备( device ), 或者以非标准的方式处理它们\n我们常用print和raw_input来进行输入和打印，那么print 和 raw_input是如何与标准输入/输出流建立关系的呢？\n其实Python程序的标准输入/输出/出错流定义在sys模块中，分别 为： sys.stdin,sys.stdout, sys.stderr\n下列的程序也可以用来输入和输出是一样的：\nimport sys\n\nsys.stdout.write(&#39;HelloWorld!&#39;)\n\nprint &#39;Please enter yourname:&#39;,\nname=sys.stdin.readline()[:-1]\nprint &#39;Hi, %s!&#39; % name\n\n那么sys.stdin, sys.stdout, stderr到底是什么呢？我们在Python运行环境中输入以下代码：\nimport sys\nfor f in (sys.stdin,sys.stdout, sys.stderr): print f\n输出为：\n&lt;open file&#39;&lt;stdin&gt;&#39;, mode &#39;r&#39; at 892210&gt;\n&lt;open file&#39;&lt;stdout&gt;&#39;, mode &#39;w&#39; at 892270&gt;\n&lt;open file&#39;&lt;stderr&gt;&#39;, mode &#39;w at 8922d0&gt;\n\n由此可以看出stdin, stdout, stderr在Python中无非都是文件属性的对象，他们在Python启动时自动与Shell 环境中的标准输入，输出，出错关联。\n而Python程序的在Shell中的I/O重定向与本文开始时举的DOS命令的重定向完全相同，其实这种重定向是由Shell来提供的，与Python 本身并无关系。那么我们是否可以在Python程序内部将stdin,stdout,stderr读写操作重定向到一个内部对象呢？答案是肯定的。\nPython提供了一个StringIO模块来完成这个设想，比如：\nfrom StringIO import StringIO\nimport sys\nbuff =StringIO()\n\ntemp =sys.stdout                              #保存标准I/O流\nsys.stdout =buff                                #将标准I/O流重定向到buff对象\nprint 42, &#39;hello&#39;, 0.001\n\nsys.stdout=temp                                #恢复标准I/O流\nprint buff.getvalue()\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="time模块" tabindex="-1"><a class="header-anchor" href="#time模块" aria-hidden="true">#</a> time模块</h2><p>time模块中时间表现的格式主要有三种： 　　a、timestamp时间戳，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量 　　b、struct_time时间元组，共有九个元素组。 　　c、format time 格式化时间，已格式化的结构使时间更具可读性。包括自定义格式和固定格式。</p><p>主要time生成方法和time格式转换方法实例</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#! /usr/bin/env python\n# -*- coding:utf-8 -*-\n\nimport time\n\n# 生成timestamp\ntime.time()\n# 1477471508.05\n#struct_time to timestamp\ntime.mktime(time.localtime())\n#生成struct_time\n# timestamp to struct_time 本地时间\ntime.localtime()\ntime.localtime(time.time())\n# time.struct_time(tm_year=2016, tm_mon=10, tm_mday=26, tm_hour=16, tm_min=45, tm_sec=8, tm_wday=2, tm_yday=300, tm_isdst=0)\n\n# timestamp to struct_time 格林威治时间\ntime.gmtime()\ntime.gmtime(time.time())\n# time.struct_time(tm_year=2016, tm_mon=10, tm_mday=26, tm_hour=8, tm_min=45, tm_sec=8, tm_wday=2, tm_yday=300, tm_isdst=0)\n\n#format_time to struct_time\ntime.strptime(&#39;2011-05-05 16:37:06&#39;, &#39;%Y-%m-%d %X&#39;)\n# time.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=16, tm_min=37, tm_sec=6, tm_wday=3, tm_yday=125, tm_isdst=-1)\n\n#生成format_time\n#struct_time to format_time\ntime.strftime(&quot;%Y-%m-%d %X&quot;)\ntime.strftime(&quot;%Y-%m-%d %X&quot;,time.localtime())\n# 2016-10-26 16:48:41\n\n\n#生成固定格式的时间表示格式\ntime.asctime(time.localtime())\ntime.ctime(time.time())\n# Wed Oct 26 16:45:08 2016\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>参考文档 https://www.cnblogs.com/wf-linux/archive/2018/08/01/9400354.html</p>',14),r={render:function(n,s){return e}}}}]);