"use strict";(self.webpackChunkistr_wiki_vuepress=self.webpackChunkistr_wiki_vuepress||[]).push([[886],{277:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-23b92768",path:"/vue/01use-axios.html",title:"使用axios请求",lang:"zh-CN",frontmatter:{title:"使用axios请求"},excerpt:"",headers:[{level:3,title:"开始之前",slug:"开始之前",children:[]},{level:3,title:"请求过程",slug:"请求过程",children:[]},{level:3,title:"封装结构",slug:"封装结构",children:[]}],filePathRelative:"vue/01use-axios.md",git:{updatedTime:1625572353e3,contributors:[{name:"刘玉路",email:"lyl07583@ly.com",commits:1}]}}},4836:(n,s,e)=>{e.r(s),e.d(s,{default:()=>r});const a=(0,e(6252).uE)('<h3 id="开始之前" tabindex="-1"><a class="header-anchor" href="#开始之前" aria-hidden="true">#</a> 开始之前</h3><p>本文主要是总结在vue中如何集成axios，有错轻喷</p><h3 id="请求过程" tabindex="-1"><a class="header-anchor" href="#请求过程" aria-hidden="true">#</a> 请求过程</h3><p>我把axios的请求过程归纳为一下几个重点流程分别展开</p><ul><li><strong>Step1</strong>. 构建axios请求实例对象，在构建时传入一些参数：baseUrl、cookie设置等</li><li><strong>Step2-1</strong>.请求前拦截(Request)，设置发送http请求附加的一些数据，如：token、请求数据格式等</li><li><strong>Step2-2</strong>.对2-1的错误进行拦截处理</li><li><strong>Step3</strong>. axios发送http请求</li><li><strong>Step2-1</strong>.请求返回拦截(Reponse)，对请求返回的数据进行处理，例如：根据状态码判断用户是否登录</li><li><strong>Step2-2</strong>.对请求返回错误的状态码进行处理</li></ul><h3 id="封装结构" tabindex="-1"><a class="header-anchor" href="#封装结构" aria-hidden="true">#</a> 封装结构</h3><p>vue2.0</p><ul><li><code>src/utils/request.js</code> axios封装对象</li><li><code>src/api/demoapi.js</code> 使用axios对象的示例</li><li><code>src/view/app.vue</code> 使用接口请求的示例组件</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>import axios from &#39;axios&#39;\nimport { Message } from &#39;element-ui&#39;\n\naxios.defaults.headers.post[&#39;Content-Type&#39;] = &#39;application/json;charset=UTF-8&#39;\naxios.defaults.headers.put[&#39;Content-Type&#39;] = &#39;application/json;charset=UTF-8&#39;\n// create an axios instance\nconst service = axios.create({\n  baseURL: &#39;api&#39;, // 基础请求地址 url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config =&gt; {\n    // do something before request is sent\n    return config\n  },\n  error =&gt; {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  response =&gt; {\n    return response.data\n  },\n  error =&gt; {\n    if (error &amp;&amp; error.response) {\n      switch (error.response.status) {\n        case 401:\n          error.message = &#39;未授权，请重新登录。&#39;\n          Message({ message: error.message, type: &#39;warning&#39;, duration: 5 * 1000 })\n          // 移除客户端用户Cookie\n          removeToken()\n          // location.reload()\n          break\n        default:\n          error.message = `网络错误：${error}`\n          break\n      }\n    }\n\n    console.error(error)\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>import request from &#39;_f/utils/request&#39;\n\nexport function queryModel(id) {\n  return request({ url: `demo/${id}`, method: &#39;get&#39; })\n}\n\nexport function create(data) {\n  return request({ url: `demo/create`, method: &#39;post&#39;, data })\n}\n\nexport function update(id, data) {\n  return request({ url: `demo/update/${id}`, method: &#39;put&#39;, data })\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>import request from &#39;@/utils/request&#39;\n\nexport function queryModel(id) {\n  return request({ url: `demo/${id}`, method: &#39;get&#39; })\n}\n\nexport function create(data) {\n  return request({ url: `demo/create`, method: &#39;post&#39;, data })\n}\n\nexport function update(id, data) {\n  return request({ url: `demo/update/${id}`, method: &#39;put&#39;, data })\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;script&gt;\nimport { queryModel, create, update } from &#39;@/api/demoapi&#39;\nexport default {\n  methods: {\n    loadData(id) {\n      queryModel(id).then(res =&gt; { console.log(res) })\n    },\n    saveData(data) {\n      create(data).then(res =&gt; { console.log(res) })\n    },\n    updateData(id, data) {\n      update(id, data).then(res =&gt; { console.log(res) })\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>vue3.0 vue3推荐使用ts，享受类型检查与提示带来的编程便利</p><ul><li><code>src/utils/request/Axios.ts</code> axios封装对象</li><li><code>src/utils/request/index.ts</code> axios封装对象</li><li><code>src/types/axios.d.ts</code> axios必要类型声明</li><li><code>src/api/demoApi.ts</code> 使用axios对象的示例</li><li><code>src/api/demoModel.ts</code> 使用axios对象的示例</li><li><code>src/view/app.vue</code> 使用接口请求的示例组件</li></ul>',14),r={render:function(n,s){return a}}}}]);