"use strict";(self.webpackChunkistr_wiki_vuepress=self.webpackChunkistr_wiki_vuepress||[]).push([[198],{837:(e,t,i)=>{i.r(t),i.d(t,{data:()=>l});const l={key:"v-36c12150",path:"/design-patterns/13%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html",title:"策略模式（ Design Pattern）",lang:"zh-CN",frontmatter:{title:"策略模式（ Design Pattern）"},excerpt:"",headers:[{level:3,title:"前言",slug:"前言",children:[]}],filePathRelative:"design-patterns/13策略模式.md",git:{updatedTime:1618581176e3,contributors:[{name:"刘玉路",email:"lyl07583@ly.com",commits:1}]}}},4488:(e,t,i)=>{i.r(t),i.d(t,{default:()=>r});const l=(0,i(6252).uE)('<p>模式类型：行为设计模式</p><h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>策略模式是一种行为设计模式，它能让你定义一系列算法，并将每种算法分别放入独立的类中，以使算法的对象能够相互替换</p><p>使用场景</p><ul><li>替换一大堆的 if else</li><li></li></ul><p>怎么替换if else</p><ul><li>在功能入口处，定义不同的入口，指向不同的策略</li><li>定义字典映射，字典键为key，字典值为不同策略</li></ul>',7),r={render:function(e,t){return l}}}}]);